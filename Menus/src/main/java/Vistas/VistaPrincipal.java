/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Algoritmos.Vector;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 *
 * @author Koopa
 */
public class VistaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VistaPrincipal
     */
    public VistaPrincipal() {
        initComponents();
        addActionListeners();
        vector=new Vector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jIterativos = new javax.swing.JMenu();
        iIMCD = new javax.swing.JMenuItem();
        iISDU = new javax.swing.JMenuItem();
        iIEV = new javax.swing.JMenuItem();
        iIDV = new javax.swing.JMenuItem();
        iIGauss = new javax.swing.JMenuItem();
        iIFibo = new javax.swing.JMenuItem();
        iITDP = new javax.swing.JMenuItem();
        iITDN = new javax.swing.JMenuItem();
        iITDH = new javax.swing.JMenuItem();
        iIBB = new javax.swing.JMenuItem();
        jRecursivos = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jOrdenamientos = new javax.swing.JMenu();
        iBurbuja = new javax.swing.JMenuItem();
        iIncersion = new javax.swing.JMenuItem();
        iSeleccion = new javax.swing.JMenuItem();
        iShell = new javax.swing.JMenuItem();
        iMerge = new javax.swing.JMenuItem();
        iQuicksort = new javax.swing.JMenuItem();
        iHeapsort = new javax.swing.JMenuItem();
        iRadix = new javax.swing.JMenuItem();
        iCauting = new javax.swing.JMenuItem();
        iBucket = new javax.swing.JMenuItem();
        jVector = new javax.swing.JMenu();
        iShow = new javax.swing.JMenuItem();
        iLlenar = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jIterativos.setText("Iterativos");

        iIMCD.setText("MCD");
        iIMCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iIMCDActionPerformed(evt);
            }
        });
        jIterativos.add(iIMCD);

        iISDU.setText("Suma de unidades");
        iISDU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iISDUActionPerformed(evt);
            }
        });
        jIterativos.add(iISDU);

        iIEV.setText("Elementos de un vector");
        iIEV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iIEVActionPerformed(evt);
            }
        });
        jIterativos.add(iIEV);

        iIDV.setText("Dobre de vector");
        jIterativos.add(iIDV);

        iIGauss.setText("Gauss");
        jIterativos.add(iIGauss);

        iIFibo.setText("Fibonacci");
        jIterativos.add(iIFibo);

        iITDP.setText("Triangulo de pascal");
        jIterativos.add(iITDP);

        iITDN.setText("Triangulo de Newton");
        jIterativos.add(iITDN);

        iITDH.setText("Torres de Hanoi");
        jIterativos.add(iITDH);

        iIBB.setText("Busqueda binaria");
        jIterativos.add(iIBB);

        jMenuBar1.add(jIterativos);

        jRecursivos.setText("Recursivos");

        jMenuItem11.setText("MCD");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jRecursivos.add(jMenuItem11);

        jMenuItem12.setText("Suma de unidades");
        jRecursivos.add(jMenuItem12);

        jMenuItem13.setText("Elementos de un vector");
        jRecursivos.add(jMenuItem13);

        jMenuItem14.setText("Doble de un vector");
        jRecursivos.add(jMenuItem14);

        jMenuItem15.setText("Gauss");
        jRecursivos.add(jMenuItem15);

        jMenuItem16.setText("Fibonacci");
        jRecursivos.add(jMenuItem16);

        jMenuItem17.setText("Triangulo de Pascal");
        jRecursivos.add(jMenuItem17);

        jMenuItem18.setText("Triangulo de Newton");
        jRecursivos.add(jMenuItem18);

        jMenuItem19.setText("Torres de Hanoi");
        jRecursivos.add(jMenuItem19);

        jMenuItem20.setText("Busqueda Binaria");
        jRecursivos.add(jMenuItem20);

        jMenuBar1.add(jRecursivos);

        jOrdenamientos.setText("Ordenamientos");

        iBurbuja.setText("Burbuja");
        jOrdenamientos.add(iBurbuja);

        iIncersion.setText("Incersión");
        jOrdenamientos.add(iIncersion);

        iSeleccion.setText("Selección");
        jOrdenamientos.add(iSeleccion);

        iShell.setText("Shell");
        jOrdenamientos.add(iShell);

        iMerge.setText("Merge");
        iMerge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iMergeActionPerformed(evt);
            }
        });
        jOrdenamientos.add(iMerge);

        iQuicksort.setText("QuickSort");
        jOrdenamientos.add(iQuicksort);

        iHeapsort.setText("Heapsort");
        jOrdenamientos.add(iHeapsort);

        iRadix.setText("Radix");
        jOrdenamientos.add(iRadix);

        iCauting.setText("Cauting");
        jOrdenamientos.add(iCauting);

        iBucket.setText("Bucket");
        iBucket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iBucketActionPerformed(evt);
            }
        });
        jOrdenamientos.add(iBucket);

        jMenuBar1.add(jOrdenamientos);

        jVector.setText("Vector");
        jVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVectorActionPerformed(evt);
            }
        });

        iShow.setText("Mostrar vector");
        iShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iShowActionPerformed(evt);
            }
        });
        jVector.add(iShow);

        iLlenar.setText("Llenar vector");
        jVector.add(iLlenar);

        jMenuItem3.setText("Llenar vector aleatorio");
        jVector.add(jMenuItem3);


        jMenuBar1.add(jVector);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 626, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iIMCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iIMCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iIMCDActionPerformed

    private void iISDUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iISDUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iISDUActionPerformed

    private void iIEVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iIEVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iIEVActionPerformed

    private void iMergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iMergeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iMergeActionPerformed

    private void iBucketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iBucketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iBucketActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jVectorActionPerformed

    private void iShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iShowActionPerformed

        //vector =
        //JOptionPane.showMessageDialog(this, "es"+);
        
        
    }//GEN-LAST:event_iShowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPrincipal().setVisible(true);

            }
        });
    }

    public  void addActionListeners(){
        jMenuItem3.addActionListener(e -> {
            System.out.println(e.getActionCommand());
            List<Integer> listaNumeros=vector.randomListFill();
            listaNumeros.forEach(numero->System.out.println(numero));
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem iBucket;
    private javax.swing.JMenuItem iBurbuja;
    private javax.swing.JMenuItem iCauting;
    private javax.swing.JMenuItem iHeapsort;
    private javax.swing.JMenuItem iIBB;
    private javax.swing.JMenuItem iIDV;
    private javax.swing.JMenuItem iIEV;
    private javax.swing.JMenuItem iIFibo;
    private javax.swing.JMenuItem iIGauss;
    private javax.swing.JMenuItem iIMCD;
    private javax.swing.JMenuItem iISDU;
    private javax.swing.JMenuItem iITDH;
    private javax.swing.JMenuItem iITDN;
    private javax.swing.JMenuItem iITDP;
    private javax.swing.JMenuItem iIncersion;
    private javax.swing.JMenuItem iLlenar;
    private javax.swing.JMenuItem iMerge;
    private javax.swing.JMenuItem iQuicksort;
    private javax.swing.JMenuItem iRadix;
    private javax.swing.JMenuItem iSeleccion;
    private javax.swing.JMenuItem iShell;
    private javax.swing.JMenuItem iShow;
    private javax.swing.JMenu jIterativos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenu jOrdenamientos;
    private javax.swing.JMenu jRecursivos;
    private javax.swing.JMenu jVector;
    private Vector vector;
    // End of variables declaration//GEN-END:variables
}
